##
## GE.properties
##
## Fichero de propiedades para Grammatical Evolution
## también parámetros generales de la ejecución
##
## Circuito de computación cuadrado
##

# Paralelismo=false
# false: ejecución no paralela
# true: ejecución paralela
Paralelismo=false

# GeneratorClassName=es.uned.simda.acidge.generador.GeneradorGrammar
GeneratorClassName=es.uned.simda.acidge.generador.GeneradorGrammar

# Type of fitness/problem to be applied/solved by GA:
ProblemClassName=es.uned.simda.acidge.problema.dev.ProblemaDev

#
# CircuitConstructorClassName=es.uned.simda.acidge.problema.dev.netlist.CirConstructorNetlist
CircuitConstructorClassName=es.uned.simda.acidge.problema.dev.netlist.CirConstructorNetlist

#
# DevEvalClassName
DevEvalClassName = es.uned.simda.acidge.problema.dev.eval.cc.CubeRootEvalUmbral

# Number of individuals in the population
IndividualsNumber = 1000
#IndividualsNumber = 500
#IndividualsNumber = 100
#IndividualsNumber = 20

# Number of genes for each individual
MinGenesNumber = 150
MaxGenesNumber = 250

# Límite máximo del crecimiento de los genes
#LimitMaxGenesNumber = 336
LimitMaxGenesNumber = 294
#LimitMaxGenesNumber = 252
#LimitMaxGenesNumber = 250
#LimitMaxGenesNumber = 2500

# Máximo número de evaluaciones de fitness
MaxEvaluationCount = 200000

# Number of generations
#GenerationsNumber = 5000
GenerationsNumber = 3000
#GenerationsNumber = 1000
#GenerationsNumber = 500
#GenerationsNumber = 300
#GenerationsNumber = 250
#GenerationsNumber = 200
#GenerationsNumber = 150
#GenerationsNumber = 100
#GenerationsNumber = 25

# Termination condition for the evolutionary algorithm:
# 1: GenerationsNumber is interpreted as the number of generations for the algorithm
# 2: GenerationsNumber is interpreted as the maximum number of generations allowed without change in the fitness of the best individual
# 3: Cuando se alcanza MaxEvaluationCount evaluaciones de fitness (no soportada)
# 4: Cuando se alcanza una condición definida por el problema
# 5: Condición definida por problema y no detención hasta máximo número de generaciones
#TerminationConditionType = 1
TerminationConditionType = 5

# Type of population initialization




PopulationInitializationClassName=es.uned.simda.acidge.ge.operadores.InicializacionRandom

# Type of parent selection (method of constructing the mating pool):
ParentSelectionClassName=es.uned.simda.acidge.ge.operadores.Tournament

# Tournament size (just in case of tournament selection). Range: [2,IndividualsNumber].
#TournamentSize = 2
TournamentSize = 3
#TournamentSize = 4
#TournamentSize = 10
#TournamentSize = 15
#TournamentSize = 20
#TournamentSize = 25

# Type of crossover:
CrossoverClassName=es.uned.simda.acidge.ge.operadores.CruceBloques1Paso

# Crossover rate
#CrossoverRate = 0.9
#CrossoverRate = 0.7
#CrossoverRate = 0.75
#CrossoverRate = 0.6
CrossoverRate = 0.5

# Number of crossover points (just in case of N-point crossover). Range: [1,GenesNumber-1]
CrossoverPointsNumber = 1

# Tamaño del bloque
CrossoverBlockSize = 7

# Crossover rate GE2
CrossoverRateGE2 = 0.5

# Crossover rate GE3
CrossoverRateGE3 = 0.5

# Type of mutation:
MutationClassName=es.uned.simda.acidge.ge.operadores.MutacionBitwise

# Mutation rate
MutationRate = 0.001
#MutationRate = 0.0025
#MutationRate = 0.005
#MutationRate = 0.007
#MutationRate = 0.0075
#MutationRate = 0.01
#MutationRate = 0.05
#MutationRate = 0.077
#MutationRate = 0.1

# Mutation rate GE2
MutationRateGE2 = 0.0

# Type of duplication:
DuplicationClassName=es.uned.simda.acidge.ge.operadores.Duplicacion

# Duplication rate
DuplicationRate = 0
#DuplicationRate = 0.005
#DuplicationRate = 0.01
#DuplicationRate = 0.02
#DuplicationRate = 0.05
#DuplicationRate = 0.1
#DuplicationRate = 0.2

# Type of survivor selection:
SurvivorSelectionClassName=es.uned.simda.acidge.ge.operadores.Generacional

# Elitism (just in case of generational model for survivor selection)
# Número de los mejores individuos que se conservan de la generación anterior
# Debe ser un número par
# 0: no elitismo
Elitism = 2

# Generational gap (just in case of steady state model for survivor selection). Range: [1, IndividualsNumber].
GenerationalGap = 50
#GenerationalGap = 2

# Máximo número de wrapping permitido en una cadena binaria
MaxWrappingNumber = 4

# Nombre del fichero de gramática para el generador
GrammarFileName = netlistComputaBloquesBJT4_n30.ebnf

# Tipo de funciones de adaptación según siguiente lista
FunAdaptacionClassName=es.uned.simda.acidge.problema.funciones.Fun1


# Porcentaje de error en evaluación de circuito
UmbralError = 0.05

#Valor objetivo de fitness
GoalFitness = 0.01

#Flag que indica si existe o no valor de terminación del algoritmo
HasGoal = false

# Generador de números aleatorios
RandomGeneratorClassName=es.uned.simda.acidge.ge.random.RandomMersenne

# Nivel máximo de recursion del generador de expresiones
MaxRecursionLevel = 1800

# HashCache: almacena las netlist hasheadas
HashCache = true

